// Count Prime 
#include <iostream>
#include <cmath>

#define MAX_N 1000000  // Adjust if needed

void fillSieve(bool sieve[], int n) {
    for (int i = 2; i <= sqrt(n); i++) {
        if (sieve[i]) {
            for (int j = i * 2; j <= n; j += i) {
                sieve[j] = false;
            }
        }
    }
}

int countPrimes(int n) {
    if (n <= 2) return 0;
    n = n - 1;

    bool sieve[MAX_N + 1];
    
    // Manual array initialization without std::fill_n
    for (int i = 0; i <= n; i++) {
        sieve[i] = true;
    }

    fillSieve(sieve, n);
    sieve[0] = false;
    sieve[1] = false;

    int count = 0;
    for (int i = 2; i <= n; i++) {
        if (sieve[i]) count++;
    }
    return count;
}

int main() {
    int n;
    printf("Enter a number: ");
    scanf("%d", &n);
    printf("Number of primes less than %d is: %d\n", n, countPrimes(n));
    return 0;
}
//***OUTPUT***
// Enter a number: 100
// Number of primes less than 100 is: 25

